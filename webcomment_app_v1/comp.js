class CommentApp extends HTMLElement {
    constructor() {
        super();
        this.attachShadow({ mode: 'open' });

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏ –≤ Shadow DOM
        this.shadowRoot.innerHTML = `
        <style>
        .comment {
            border: 2px solid #bcc;
            padding: 10px;
            margin: 10px 0;
        }

        .comment:nth-child(odd) {
            border: 2px solid #fff;
            background-color: #f0f0f0;
        }

        .comment:nth-child(even) {
            border: 2px solid #ccc;
            background-color: #e0e0e0;
        }

        .comment .reply {
            margin-left: 20px;
        }

        .comment .reply:nth-child(od) {
            border: 2px solid #ccc;
            background-color: #f5f5f5;
        }

        .comment .reply:nth-child(even) {
            border: 2px solid #fff;
            background-color: #e5e5e5;
        }
        </style>
    `;

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏–∑ localStorage
        this.comments = JSON.parse(localStorage.getItem('comments')) || [];

        // –§–æ—Ä–º–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        const commentForm = document.createElement('form');
        commentForm.id = 'commentForm';

        const textarea = document.createElement('textarea');
        textarea.style.width = '50%';
        textarea.style.height = '50px';
        textarea.id = 'commentText';
        textarea.placeholder = '–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π';

        const submitButton = document.createElement('button');
        submitButton.type = 'submit';
        submitButton.textContent = '–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π';

        commentForm.appendChild(textarea);
        commentForm.appendChild(submitButton);

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
        commentForm.addEventListener('submit', (event) => {
            event.preventDefault();
            this.addComment();
        });

        this.shadowRoot.appendChild(commentForm);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        const clearButton = document.createElement('button');
        clearButton.textContent = '–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏!!!';
        clearButton.addEventListener('click', () => this.clearComments());
        this.shadowRoot.appendChild(clearButton);

        // –í—ã–∑–æ–≤ –º–µ—Ç–æ–¥–∞ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
        this.render();
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    render() {
        // –û—á–∏—Å—Ç–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ Shadow DOM –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫–æ–π
        this.shadowRoot.querySelectorAll('.comment').forEach(comment => comment.remove());

        // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
        this.comments.forEach(comment => {
            this.renderComment(comment, this.shadowRoot);
        });
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ –æ–¥–Ω–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    renderComment(comment, parentElement) {
        const commentComponent = document.createElement('div');
        commentComponent.textContent = `${comment.text} (${comment.timestamp})`;
        commentComponent.classList.add('comment');

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Like"
        const likeButton = document.createElement('button');
        likeButton.textContent = `üëç ${comment.likes || 0} Like`;

        likeButton.addEventListener('click', () => {
            this.toggleLike(comment);
        });

        commentComponent.appendChild(likeButton);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Reply"
        const replyButton = document.createElement('button');
        replyButton.textContent = 'üí¨ Reply';
        replyButton.addEventListener('click', () => {
            this.showReplyForm(comment, commentComponent);
        });
        commentComponent.appendChild(replyButton);

        // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "Delete"
        const deleteButton = document.createElement('button');
        deleteButton.textContent = '‚ùå Delete';
        deleteButton.addEventListener('click', () => {
            this.deleteComment(comment);
        });
        commentComponent.appendChild(deleteButton);

        parentElement.appendChild(commentComponent);

        // –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –≤—ã–∑–æ–≤ renderComment –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤
        if (comment.replies) {
            comment.replies.forEach(reply => {
                this.renderComment(reply, commentComponent);
            });
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ª–∞–π–∫–∞
    toggleLike(comment) {
        comment.likes = comment.likes ? comment.likes + 1 : 1;
        localStorage.setItem('comments', JSON.stringify(this.comments));
        this.render();
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    addComment() {
        const commentText = this.shadowRoot.getElementById('commentText').value.trim();
        if (commentText !== '') {
            const timestamp = new Date().toLocaleString();
            this.comments.push({ text: commentText, timestamp, replies: [] });
            localStorage.setItem('comments', JSON.stringify(this.comments));
            this.render();
            this.shadowRoot.getElementById('commentText').value = '';
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º—ã –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    showReplyForm(parentComment, parentElement) {

        const replyForm = document.createElement('form');
        const replyTextarea = document.createElement('textarea');
        replyTextarea.style.width = '50%';
        replyTextarea.style.height = '50px';
        replyTextarea.placeholder = '–ù–∞–ø–∏—à–∏—Ç–µ –æ—Ç–≤–µ—Ç';
        const replySubmitButton = document.createElement('button');
        replySubmitButton.type = 'submit';
        replySubmitButton.textContent = '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç–≤–µ—Ç';

        replyForm.appendChild(replyTextarea);
        replyForm.appendChild(replySubmitButton);

        replyForm.addEventListener('submit', (event) => {
            event.preventDefault();
            const repliedCommentText = replyTextarea.value;
            this.addReply(repliedCommentText, parentComment, parentElement);
            replyTextarea.value = '';
            parentElement.removeChild(replyForm);
        });

        parentElement.appendChild(replyForm);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
    addReply(repliedCommentText, parentComment, parentElement) {
        const timestamp = new Date().toLocaleString();
        const reply = { text: repliedCommentText, timestamp, replies: [] };
        parentComment.replies.push(reply);
        localStorage.setItem('comments', JSON.stringify(this.comments));
        this.renderComment(reply, parentElement);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    deleteComment(comment) {
        const userConfirmed = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π?');
        if (userConfirmed) {
            this.traverseAndDelete(this.comments, comment);
            localStorage.setItem('comments', JSON.stringify(this.comments));
            this.render();
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∏ –µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤
    traverseAndDelete(comments, targetComment) {
        for (let i = 0; i < comments.length; i++) {
            const comment = comments[i];
            if (comment === targetComment) {
                comments.splice(i, 1);
                return;
            }
            if (comment.replies) {
                this.traverseAndDelete(comment.replies, targetComment);
            }
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
    clearComments() {
        const userConfirmed = confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏?');
        if (userConfirmed) {
            this.comments = [];
            localStorage.removeItem('comments');
            this.render();
        }
    }
}

customElements.define('comment-app', CommentApp);
